/*
 * This file is generated by jOOQ.
 */
package be.app.sb.db.tables;


import be.app.sb.db.DefaultSchema;
import be.app.sb.db.Indexes;
import be.app.sb.db.Keys;
import be.app.sb.db.tables.records.TimereportRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timereport extends TableImpl<TimereportRecord> {

    private static final long serialVersionUID = -1844835281;

    /**
     * The reference instance of <code>TIMEREPORT</code>
     */
    public static final Timereport TIMEREPORT = new Timereport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimereportRecord> getRecordType() {
        return TimereportRecord.class;
    }

    /**
     * The column <code>TIMEREPORT.ID</code>.
     */
    public final TableField<TimereportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>TIMEREPORT.USER_NAME</code>.
     */
    public final TableField<TimereportRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>TIMEREPORT.DEPARTMENT_NAME</code>.
     */
    public final TableField<TimereportRecord, String> DEPARTMENT_NAME = createField("department_name", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>TIMEREPORT.PROJECT_NAME</code>.
     */
    public final TableField<TimereportRecord, String> PROJECT_NAME = createField("project_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>TIMEREPORT.NB_HOURS</code>.
     */
    public final TableField<TimereportRecord, Integer> NB_HOURS = createField("nb_hours", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TIMEREPORT.REPORTED_TIME</code>.
     */
    public final TableField<TimereportRecord, LocalDateTime> REPORTED_TIME = createField("reported_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>TIMEREPORT</code> table reference
     */
    public Timereport() {
        this(DSL.name("timereport"), null);
    }

    /**
     * Create an aliased <code>TIMEREPORT</code> table reference
     */
    public Timereport(String alias) {
        this(DSL.name(alias), TIMEREPORT);
    }

    /**
     * Create an aliased <code>TIMEREPORT</code> table reference
     */
    public Timereport(Name alias) {
        this(alias, TIMEREPORT);
    }

    private Timereport(Name alias, Table<TimereportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Timereport(Name alias, Table<TimereportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Timereport(Table<O> child, ForeignKey<O, TimereportRecord> key) {
        super(child, key, TIMEREPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TimereportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TIMEREPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TimereportRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TimereportRecord>> getKeys() {
        return Arrays.<UniqueKey<TimereportRecord>>asList(Keys.CONSTRAINT_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timereport as(String alias) {
        return new Timereport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timereport as(Name alias) {
        return new Timereport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Timereport rename(String name) {
        return new Timereport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Timereport rename(Name name) {
        return new Timereport(name, null);
    }
}
